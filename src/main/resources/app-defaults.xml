<?xml version="1.0" encoding="UTF-8"?>
<included>
    <property name="CONSOLE_LOG_PATTERN"
              value="%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:[%L]){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}"/>
    <property name="FILE_LOG_PATTERN"
              value="${FILE_LOG_PATTERN:-%d{yyyy-MM-dd HH:mm:ss.SSS} ${LOG_LEVEL_PATTERN:-%5p} ${PID:- } --- [%t] %-40.40logger{39} :[%L] %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"/>
    <property name="LOG_PATH" value="C:/Users/15858/logAction/${app.dir}"/>
    <property name="LOG_FILE" value="${LOG_FILE:-${LOG_PATH:-${LOG_TEMP:-${java.io.tmpdir:-/tmp}}}/${app.dir}-info}"/>
    <include resource="org/springframework/boot/logging/logback/defaults.xml"/>
    <include resource="org/springframework/boot/logging/logback/console-appender.xml"/>

    <appender name="FILE"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_FILE}.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!-- rollover daily -->
            <fileNamePattern>${LOG_FILE}-%d{yyyy-MM-dd-HH00}.%i.log</fileNamePattern>
            <!-- each file should be at most 100MB, keep 15 days worth of history, but at most 20GB -->
            <maxFileSize>100MB</maxFileSize>
            <maxHistory>360</maxHistory>
            <totalSizeCap>10GB</totalSizeCap>
        </rollingPolicy>
        <encoder>
            <pattern>${FILE_LOG_PATTERN}</pattern>
        </encoder>
    </appender>

    <appender name="ASYNC_FILE" class="ch.qos.logback.classic.AsyncAppender">
        <!-- 默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
        <discardingThreshold>-1</discardingThreshold>
        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
        <queueSize>2048</queueSize>
        <includeCallerData>true</includeCallerData>
        <!-- 添加附加的appender,最多只能添加一个 -->
        <appender-ref ref="FILE"/>
    </appender>

    <!--<logger name="org.springframework.security" level="DEBUG"/>-->
    <logger name="org.apache.catalina.filters.RemoteIpFilter" level="DEBUG"/>
    <logger name="org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClient" level="DEBUG"/>
    <logger name="org.springframework.cloud.sleuth.instrument.web.TraceFilter" level="DEBUG"/>
    <logger name="org.springframework.web.servlet.DispatcherServlet" level="DEBUG"/>
    <logger name="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping" level="DEBUG"/>
    <logger name="org.springframework.security.web.util.matcher" level="INFO"/>

    <logger name="org.apache.zookeeper.ZooKeeper" level="WARN"/>
    <!--<logger name="org.apache.kafka.clients.producer.internals.RecordBatch" level="TRACE"/>-->
    <logger name="org.apache.kafka.common.utils.AppInfoParser" level="ERROR"/>
    <logger name="org.apache.kafka.clients.consumer.ConsumerConfig" level="ERROR"/>
    <logger name="org.apache.kafka.clients.producer.ProducerConfig" level="ERROR"/>

    <logger name="com.jarvis.cacheKey" level="DEBUG"/>
    <logger name="com.neatlife" level="DEBUG"/>

    <logger name="org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod" level="TRACE"/>
    <logger name="org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor" level="TRACE"/>
    <!--<logger name="org.apache.kafka.clients.producer.internals.Sender" level="TRACE"/>-->

    <logger name="org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping" level="TRACE"/>
    <logger name="org.springframework.web.reactive.result.method.InvocableHandlerMethod" level="TRACE"/>

    <!--关闭reactivefeign日志，开启WebClient日志-->
    <!--<logger name="reactivefeign.client.log" level="TRACE"/>-->
    <logger name="org.springframework.web.reactive.function.client.ExchangeFunctions" level="TRACE"/>
    <logger name="org.hibernate.SQL" level="DEBUG"/>
    <logger name="org.hibernate.type.descriptor.sql.BasicBinder" level="TRACE"/>

    <logger name="org.apache.ibatis.logging" level="DEBUG"/>

    <root level="INFO">
        <!--开发机，windows机开启console日志-->
        <if condition='"${os.name}".toUpperCase().contains("WINDOWS") || "${CONSOLE_LOG_ON}".toUpperCase().equals("TRUE")'>
            <then>
                <appender-ref ref="CONSOLE"/>
            </then>
        </if>
        <appender-ref ref="ASYNC_FILE"/>
    </root>
</included>